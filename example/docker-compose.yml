services:
  dbservice:
    image: postgres:17
    volumes:
      - slidetap_postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=slidetap

  brokerservice:
    image: rabbitmq:4
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  taskservice:
    env_file: .env
    environment:
      SLIDETAP_STORAGE: /storage
      SLIDETAP_DBURI: postgresql://user:password@dbservice:5432/slidetap
      SLIDETAP_BROKER_URL: amqp://user:password@brokerservice:5672
      SLIDETAP_WEBAPP_URL: https://${SLIDETAP_SERVERNAME}:${SLIDETAP_PORT}
    build:
      context: ../slidetap-app
      dockerfile: dockerfiles/taskservice.Dockerfile
    volumes:
      - ${SLIDETAP_STORAGE}:/storage:rw
    depends_on:
      brokerservice:
        condition: service_started
      dbservice:
        condition: service_started

  webservice:
    env_file: .env
    environment:
      SLIDETAP_STORAGE: /storage
      SLIDETAP_DBURI: postgresql://user:password@dbservice:5432/slidetap
      SLIDETAP_WEBAPP_URL: https://${SLIDETAP_SERVERNAME}:${SLIDETAP_PORT}
      SLIDETAP_BROKER_URL: amqp://user:password@brokerservice:5672
      SLIDETAP_APIPORT: ${SLIDETAP_APIPORT}
    build:
      context: ../slidetap-app
      dockerfile: dockerfiles/webservice.Dockerfile
    volumes:
      - ${SLIDETAP_STORAGE}:/storage:rw
    depends_on:
      brokerservice:
        condition: service_started
      dbservice:
        condition: service_started

  webserver:
    env_file: .env
    build:
      context: ../slidetap-client
      dockerfile: dockerfiles/webserver.Dockerfile
    ports:
      - ${SLIDETAP_PORT}:${SLIDETAP_PORT}
    volumes:
      - ${SLIDETAP_SSL_CERTIFICATE_FOLDER}:/certs:ro
    depends_on:
      appservice:
        condition: service_started

volumes:
  slidetap_postgres_data:
